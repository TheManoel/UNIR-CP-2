---

- name: config firewall ports to access kubernetes
  firewalld:
    permanent: yes
    state: enabled
    port: "{{ item }}"
  become: true
  with_items:
    - 6443/tcp
    - 2379-2380/tcp
    - 10250/tcp
    - 10251/tcp
    - 10252/tcp
    - 10255/tcp
  when: inventory_hostname in groups['master']

- name: reload service firewalld
  service:
    name: firewalld
    state: restarted
  become: true
  when: inventory_hostname in groups['master']

- name: config kubeadm
  command: kubeadm config images pull
  become: true
  when: inventory_hostname in groups['master']

- name: config firewall access to workers
  firewalld:
    permanent: yes
    rich_rule: "{{ item }}"
    state: enabled
  become: true
  with_items:
    - rule family=ipv4 source address={{master_ip}}/32 accept
    - rule family=ipv4 source address={{worker_ip}}/32 accept
  when: inventory_hostname in groups['master']

- name: reload service firewalld
  service:
    name: firewalld
    state: restarted
  become: true
  when: inventory_hostname in groups['master']

- name: config container access to localhost
  firewalld:
    permanent: yes
    state: enabled
    zone: public
    rich_rule: rule family=ipv4 source address=172.17.0.0/16 accept
  become: true
  when: inventory_hostname in groups['master']

- name: reload service firewalld
  service:
    name: firewalld
    state: restarted
  become: true
  when: inventory_hostname in groups['master']

- name: defining POD network
  command: kubeadm init --pod-network-cidr 192.169.0.0/16
  become: true
  register: kubeadm_pod_network
  when: inventory_hostname in groups['master']

- name: authorize root user access to cluster
  command: "{{ item }}"
  become: true
  with_items:
    - mkdir -p /root/.kube
    - yes 'y' | cp -i /etc/kubernetes/admin.conf /root/.kube/config
    - chown root:root /root/.kube/config
    - kubectl get nodes
  when: inventory_hostname in groups['master']